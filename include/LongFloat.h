#ifndef LONGFLOAT_H
#define LONGFLOAT_H

#include <cmath>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>

#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define PI_STR "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317258924835367674719289375479769451791571271743829528852264040127689699828741310940372951250840731312509405550797459697738000624379143401761993055639819051107191724125664656559522582943042738753905768578879347387221951913146970319193893520082784880886939068724572975955771096573363681369083479883121906983299338734416584695592821639176919279930743442154843398319478240503893001950097384144600639329015225901727455865599980142730799688752157021931151755337152621390077189372159532733816455367876593470758923904307792890594815139040849295206231025047791605299481900084780565151274988614071721349736088703173020582614828747333337156120639039134449972939643912461394529395753624034441378323363328306570390270958587147454277118172185812491698101351633380433176536744773130818871099087670394559585180936215138916972885568862186314140973593744518237193692089511229999427135933619962791976709056184943154938448902129350452299888568136925228544045085478698988019927057639510261411957469793742742969635822298228249593074659293092009691824224806782843770384330365452192317369974479648468756195990734836019567865294497323748635322700936237874332973139680897768778955940975548559252328092825248273667493664516940649850904776534398054265096210338308756332877763998727497903929056440434107114029596794812861659899367763085260148104307853124447493533766444992505903283090287660728590466257649957196222522062477387262524869816233542509997253608085742759939001386055743045593951309998499026700345723336749391941656833609128987679978039212274483059087426718670402345166056135482616080230954597839809615642802342174680680298845255015333123592073480175779963975050575064109937328713260131731865638688178897184308217602989465790043687786976165377022865641298390883772164223281014234288875142967111583682980980906808524692038841271032393332422336297867747883491488209979980388829800917"
#define CHUDOVSKY_KOEF "42698670.666333395817712889160659608273320884002509082800838007178852605157457594216301799911455668601345737167494080411392292736181266728193136882170582563460066798766483460795735983552333985484854583276247377491250754585032578219745675991212400392015323321276835446296485837355697306012123458758049143216640427423547978510448221162836911053807235838159872646304853335987865686269706977445355835599133539678641902312391523829877481108898664622249006021331236404750043178521385802944662855665612876640849908660806684778002991357625433646133139055099023131780968145833996701200122389012154421724362284068629329420050521419015939092569907194340029444433951848629766397465505895098872676970688044372715257280235227382872383401509275515634457705197803145721985414408323372552767448562562388318221196367736544745016258054251434084686038802841060911418502815704983841331432095161566844429229281236234645670268734321517159131712143438348676514584576378735574108814073595022482261786305917060682396330756892805473449402143277237931963516369435685352365092484541942462092883877763497113840189835579188041015469199214591024464903812082236674251398135427633950703414918564398535902451835963329225993094620996776194600147027518785996432474421327664632559849828968208314238939908213288668864505307989237416790602042952155002363560107213852002818389447886529373647927435261622722659693610242183125434324402807272654881841337046021962005588671753995076464157748420706705788081555586601814528305826561147446525072540899979985469021440538232652735986871049579313454125256756946817498547980109520705620147393364518915878961023099880380883220356686938001604251001097944277105210370465860016431253036935588532610954757711019149238441320499873270033926280773104106978137183054470529244857536182559624515180184010151683243473408729742661899059223630893035500823027679849232721173165309525717280482325139339840211758636278297842552703166603606422904201823794913202045464937402255689393016703066065957563645962943734140254957"

namespace LongNums {
    class LongFloat {

    private:
        /// TODO: comment bellow
        /// In present i will modify it to bigger notation
        static int base;
        /// Max amount of nums after dot
        static int precision;

        /// Translate char to int
        static inline int charToInt(char charValue);

        /// Translate int to chat
        static inline char intToChar(int intValue);

        /// Sign of number
        char sign;
        /// Abs of num as a vector of decimals
        std::vector<int> nums;
        /// Amount of nums after dot
        int exponent;

    public:
        /// Empty constructor
        LongFloat();

        /// Copy constructor
        LongFloat(LongFloat const &lf);

        /// String constructor
        explicit LongFloat(const std::string &value);

        /// Base nums constructors
        LongFloat(int num) : LongFloat(std::to_string(num)) {}

        LongFloat(long long num) : LongFloat(std::to_string(num)) {}

        LongFloat(double num) : LongFloat(std::to_string(num)) {}

        /// Delete zeros from the beginning and the end of LongFloat
        void deleteZeros();

        /// @return 1 / LongFloat
        LongFloat getReciprocal();

        /// Cast LongFloat to std::string
        std::string toString() const;
        // Basic operators to work with nums

        LongFloat &operator=(const LongFloat &other);


        LongFloat operator-() const;

        friend std::ostream &operator<<(std::ostream &os, const LongFloat &lf);

        friend bool operator>(const LongFloat &lf1, const LongFloat &lf2);

        friend bool operator==(const LongFloat &lf1, const LongFloat &lf2);

        friend std::strong_ordering operator<=>(const LongFloat &lf1, const LongFloat &lf2);

        friend LongFloat operator-(const LongFloat &lf1, const LongFloat &lf2);

        friend LongFloat operator+(const LongFloat &lf1, const LongFloat &lf2);

        friend LongFloat operator*(const LongFloat &lf1, const LongFloat &lf2);

        friend LongFloat operator/(const LongFloat &lf1, const LongFloat &lf2);

        friend LongFloat operator ""_LF(const char *str);

        LongFloat sqrt();

        /// Getters and Setters

        static int getPrecision();

        static void setPrecision(int precision);

        int getExponent() const;

        void setExponent(int exponent);
    };

    /// My Literal
    LongFloat operator ""_LF(const char *str);
}


#endif
